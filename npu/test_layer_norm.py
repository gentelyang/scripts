#!/bin/env python
# -*- coding: utf-8 -*-
# encoding=utf-8 vi:ts=4:sw=4:expandtab:ft=python
"""
/***************************************************************************
*
* Copyright (c) 2020 Baidu.com, Inc. All Rights Reserved
* @file test_layernorm2d.py
* @author liyang109
* @date 2021/3/23 3:53
* @brief test layernorm2d.py
*
**************************************************************************/
"""
from apibase import APIBase
import paddle
import pytest
import numpy as np


class TestLayerNorm(APIBase):
    """
    test
    """
    def hook(self):
        """
        implement
        """
        self.types = [np.float32]
        self.rtol = 1e-6
        self.enable_backward = False

obj = TestLayerNorm(paddle.fluid.layers.layer_norm)

def test_layernorm_base():
    """
    input=4D, num_features=2
    """
    x_data = np.array([[[[0.6964692, 0.28613934, 0.22685145],
                       [0.5513148, 0.71946895, 0.42310646]],
                      [[0.9807642, 0.6848297, 0.4809319],
                       [0.39211753, 0.343178, 0.7290497]]],
                     [[[0.43857226, 0.0596779, 0.39804426],
                       [0.7379954, 0.18249173, 0.17545176]],
                      [[0.53155136, 0.53182757, 0.63440096],
                       [0.8494318, 0.7244553, 0.6110235]]]])
    res = [[[[0.7187893, -1.2011795, -1.4785926],
           [0.03959922, 0.82640713, -0.5602985]],
          [[2.0490303, 0.66432714, -0.28972825],
           [-0.7052984, -0.93429065, 0.8712362]]],
         [[[-0.21512909, -1.8132395, -0.38606915],
           [1.0477855, -1.2952322, -1.3249255]],
          [[0.17704056, 0.17820556, 0.6108423],
           [1.5178049, 0.99067575, 0.5122401]]]]
    obj.run(res=res, input=x_data)

def test_layernorm1():
    """
    input=4D, num_features=2
    """
    x_data = np.array([[[[0.6964692, 0.28613934, 0.22685145],
                       [0.5513148, 0.71946895, 0.42310646]],
                      [[0.9807642, 0.6848297, 0.4809319],
                       [0.39211753, 0.343178, 0.7290497]]],
                     [[[0.43857226, 0.0596779, 0.39804426],
                       [0.7379954, 0.18249173, 0.17545176]],
                      [[0.53155136, 0.53182757, 0.63440096],
                       [0.8494318, 0.7244553, 0.6110235]]]])
    res = [[[[0.7187893, -1.2011795, -1.4785926],
           [0.03959922, 0.82640713, -0.5602985]],
          [[2.0490303, 0.66432714, -0.28972825],
           [-0.7052984, -0.93429065, 0.8712362]]],
         [[[-0.21512909, -1.8132395, -0.38606915],
           [1.0477855, -1.2952322, -1.3249255]],
          [[0.17704056, 0.17820556, 0.6108423],
           [1.5178049, 0.99067575, 0.5122401]]]]
    obj.run(res=res, input=x_data)

def test_layernorm2():
    """
    input=4D, num_features=2, epsilon<=1e-03
    """
    x_data = np.array([[[[0.6964692, 0.28613934, 0.22685145],
                       [0.5513148, 0.71946895, 0.42310646]],
                      [[0.9807642, 0.6848297, 0.4809319],
                       [0.39211753, 0.343178, 0.7290497]]],
                     [[[0.43857226, 0.0596779, 0.39804426],
                       [0.7379954, 0.18249173, 0.17545176]],
                      [[0.53155136, 0.53182757, 0.63440096],
                       [0.8494318, 0.7244553, 0.6110235]]]])
    res = [[[[0.7187893, -1.2011795, -1.4785926],
           [0.03959922, 0.82640713, -0.5602985]],
          [[2.0490303, 0.66432714, -0.28972825],
           [-0.7052984, -0.93429065, 0.8712362]]],
         [[[-0.21512909, -1.8132395, -0.38606915],
           [1.0477855, -1.2952322, -1.3249255]],
          [[0.17704056, 0.17820556, 0.6108423],
           [1.5178049, 0.99067575, 0.5122401]]]]
    obj.run(res=res, input=x_data, epsilon=1e-5)
